{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","helpers.js","app.js"],"names":["modalContainer","document","querySelector","modal","getDetailedFetch","countryCode","fetch","detailedFetch","json","jsonCountry","alert","message","commaSeparated","num","toString","replace","openModal","countryData","allCountriesData","name","nativeName","population","region","subregion","capital","topLevelDomain","currencies","languages","borders","flag","renderBorders","filter","country","includes","alpha3Code","map","border","join","innerHTML","currency","code","language","length","appendChild","container","input","select","title","themeToggler","togglerText","backButton","searchLetter","countriesData","then","response","data","renderCountry","searchFilter","raw","filtered","toLowerCase","selectRegion","shit","handleCountryClick","allCountries","style","display","forEach","countryCard","createElement","classList","add","addEventListener","body","toggle","contains","textContent","e","target","className","testshit","parentElement","dataset","location","href","value","validate","match"],"mappings":";AAAA;AEAA,AFCA;AACA;AEDA,AFEA;AACA;AACA;AACA;AACA;AACA;AECA,AFAA,IEAM4C,SAAS,GAAG3C,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB;AACA,AFAA,IEAM2C,KAAK,GAAG5C,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAd;AACA,AFAA,IEAM4C,MAAM,GAAG7C,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;AACA,AFAA,IEAM6C,KAAK,GAAG9C,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,ADbO,ADaP,IEAM8C,ADbOhD,YCaK,EDbS,CCaNC,EDbSA,MCaD,CAACC,CDbQ,CAACA,WCalB,CAAuB,CDbd,CAAuB,QCahC,CAArB,UDb8B,CAAvB;ACcP,AFAA,IEAM+C,WAAW,GAAGhD,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAApB;AACA,ADdO,ADcP,IEAMgD,ADdO/C,KAAK,GAAGF,ECcL,GAAGA,GDdU,CAACC,ICcH,CAACA,QDdP,CAAuB,ICczB,CAAuB,GDdrB,CAAd,UCcY,CAAnB;AAEA,AFDA,IECIiD,YAAY,GAAG,EAAnB;AAEA,AFFA,IEEMC,aAAa,GAAG9C,KAAK,CAC1B,4FAD0B,CAAL,CAGpB+C,IAHoB,CAGf,UAACC,QAAD;AAAA,AFJP,SEIqBA,ADnBClD,QCmBO,CAACI,IAAT,EAAd;AAAA,AFHP,CEAsB,EAIpB6C,IAJoB,CAIf,UAACE,IAAD;AAAA,AFHP,SEGiBA,IAAV;AAAA,AFFP,CEFsB,CAAtB;AFGA;AEGA,AFFA,wDEEC,sBDtBM,iBAAgClD,WAAhC;ACsBN,ADtBM,ADqBP;AECC,ADtBM,ADsBP;AEAC,ADtBM,ADuBP;AEDC,ADtBM,ADwBP;AEFC,ADtBM,ADyBP;AEHC,ADtBM,AD0BP,wBEFEmD,aAFD;AAAA,ADtBM,AD2BP;AELC,ADtBM,AD4BP,iBEJsBJ,EDtBQ9C,KAAK,MCoBlC,4CDnB4CD,WADV,kHAF5B;AD6BP;AEPC,ADtBM,AD8BP;AERC,ADpBOE,AD6BR,YC7BQA,aAFD;ACsBN,ADtBM,ADgCP;AEVC,ADtBM,ADiCP,mBC5B4BA,aAAa,CAACC,IAAd,EALrB;ACsBN,AFYD;AClCO,ADmCP;AEbC,ADjBOC,AD+BR,YC/BQA,WALD;ACsBN,ADtBM,ADqCP,6CC9BSA,WAPF;ACsBN,AFgBD;AEZEC,AD1BK,ADuCP,UEbEA,KAAK,CAAC,YAAEC,OAAH,CAAL;AD1BK,ADwCP;AElBC,ADtBM,ADyCP;AEnBC,ADbCD,ADiCF,YCjCEA,KAAK,CAAC,YAAIC,OAAL,CAAL;ACaD,AFqBD;AErBC,ADtBM,AD4CP;AEtBC,ADtBM,AD6CP;AEvBC,ADtBM,AD8CP;AExBC,ADtBM,AD+CP,CEzBA;ADtBO,ADgDP;AElBA,AD9BO,ADiDP,IEnBM8C,YAAY;AAAA,AD9BX,ADkDP,sEEpBqB;AAAA,AFqBrB;AErBqB,AFsBrB;AEtBqB,AFuBrB;AEvBqB,ADjBd,ADyCP,SCzCgB7C,cAAT,CAAwBC,GAAxB,EAA6B;ACiBf,ADhBpB,ADyCD,SCzCQA,GAAG,CAACC,QAAJ,GAAeC,OAAf,CAAuB,yBAAvB,EAAkD,KAAlD,CAAP;ACgBoB,ADfpB,ADyCD;AE1BqB,AF2BrB,mBE1BmBqC,aADE;ADbd,ADyCP,SCzCgBpC,SAAT,CAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkD;ACapC,ADZpB,ADyCD,MCxCEC,IADD,GAYIF,WAZJ,CACCE,IADD;ACaMuC,ADbN,AD0CD,MCxCEtC,MCWKsC,GADc,CDZpB,GAYIzC,WAZJ,CAECG,UAFD;ACeMuC,ADfN,AD2CD,MCxCEtC,MCYKsC,IDfN,GAYI1C,CCAgB,GAGHyC,GAAG,CAAC3B,GDfrB,CAGCV,ECYgB,CAAW,ODf5B,GCe6BkC,IAAD;AAAA,ADf5B,AD4CD,MCxCEjC,MAJD,GAYIL,MCIHsC,IAAI,CAACpC,ADhBN,CAICG,GCYA,CAAUsC,EDhBX,SCgBC,GAAwB3B,QAAxB,CAAiCkB,YAAY,CAACS,WAAb,EAAjC,CAD2B;AAAA,ADf5B,AD6CD,MCxCErC,OCUgB,CAHG,CDZpB,GAYIN,WAZJ,CAKCM,SALD;ACmBAiC,ADnBA,AD8CD,MCxCEhC,MCaDgC,CDnBA,GAYIvC,SCOS,CAAC0C,CDnBd,CAMCnC,MCaY,CAAb,ADnBA;AAAA,AD+CD,MCxCEC,cAPD,GAYIR,WAZJ,CAOCQ,cAPD;ACYoB,ADZpB,ADgDD,MCxCEC,UARD,GAYIT,WAZJ,CAQCS,UARD;ACYoB,ADZpB,ADiDD,MCxCEC,SATD,GAYIV,WAZJ,CASCU,SATD;ACYoB,ADZpB,ADkDD,MCxCEC,OAVD,GAYIX,WAZJ,CAUCW,OAVD;ACYoB,ADZpB,ADmDD,MCxCEC,IAXD,GAYIZ,WAZJ,CAWCY,IAXD;ACYoB,ADEpB,ADsCD,MCtCOC,aAAa,GAAGZ,gBAAgB,CACpCa,MADoB,CACb,UAACC,OAAD;ACHW,ADGX,ADsCV,WCtCuBJ,OAAO,CAACK,QAAR,CAAiBD,OAAO,CAACE,UAAzB,CAAb;ACHW,ADGX,ADuCV,GE1CkB,ADEK,EAEpBC,GAFoB,CAEhB,UAACC,MAAD,EAAY;AAChB,ADsCH,+DCtCqDA,MAAM,CAACF,UAAzD,cAAuEE,MAAM,CAACjB,IAA9E;ACLe,ADMf,ADsCH,GC1CuB,EAKpBkB,IALoB,CAKf,GALe,CAAtB,ICFKoB,YAAY;AAAA,ADSjBzD,ADoCD,ECpCCA,cAAc,CAACsC,SAAf,kEAIWT,IAJX,uLAUwCV,IAVxC,gFAYyDC,UAZzD,uFAa4DR,cAAc,CACpES,UADoE,CAb1E,+EAgBoDC,MAhBpD,sFAiB2DC,SAjB3D,iFAkBsDC,OAlBtD,oJAsB8DC,cAtB9D,uFAuB4DC,UAAU,CAACS,GAAX,CACtD,UAACI,QAAD;ACjCW,ADiCX,ADaP,WCbqBA,QAAQ,CAACC,IAAvB;ACjCW,ADiCX,ADcP,GE/CA,ADgC6D,CAvB5D,qFA0B0Db,SAAS,CAACQ,GAAV,CACpD,UAACM,QAAD;AAAA,ADYP,WCZqBA,QAAQ,CAACtB,IAAvB;AC1BP,AD0BO,ADaP,GCd2D,CCzBrD0C,ADDL,YCCiB,2DD6B0BjC,OAAO,CAACc,MAAR,GAAiB,CAAjB,GAAqBZ,aAArB,GAAqC,2BA9BhF;ACCiB,ADqCjB3B,ADGD,ECHCA,KAAK,CAACwC,WAAN,CAAkB3C,cAAlB,oCCrCoB,kBAAOsB,MAAP;AAAA,ADsCpB,ADGD;AEzCqB,AF0CrB;AE1CqB,AF2CrB;AE3CqB,AF4CrB;AE5CqB,AF6CrB;AE7CqB,AF8CrB;AE9CqB,AF+CrB,mBE9C4B8B,aADP;AFgDrB;AEhDqB,AFiDrB;AEhDOS,AFiDP,YEjDOA,YADc;AAEdC,AFiDP,YEjDOA,IAFc,GAEPD,YAAY,CAAC9B,MAAb,CAAoB,UAACwB,IAAD;AAAA,AFkDlC,qBElD4CA,IAAI,CAACjC,MAAL,KAAgBA,MAA1B;AAAA,AFmDlC,aEnDc,CAFO;AAGpBsB,AFmDD,YEnDCA,SAAS,CAACN,SAAV,GAAsB,EAAtB;AACAkB,AFmDD,YEnDCA,aAAa,CAACM,IAAD,CAAb;AFoDD;AExDqB,AFyDrB;AEzDqB,AF0DrB;AE1DqB,AF2DrB;AE3DqB,AF4DrB;AE5DqB,AF6DrB;AE7DqB,AF8DrB;AE9DqB,AF+DrB,GE/DkB;AFgElB;AEhEkB,AFiElB;AEjEkB,AFkElB;AElEkB,AFmElB;AEnEkB,AFoElB,GEpEA;AFqEA;AACA,SE/DeC;AFgEf;AACA;AACA;AACA;AACA,gFEpEA,kBAAkC1D,WAAlC;AAAA,AFqEA;AErEA,AFsEA;AEtEA,AFuEA;AEvEA,AFwEA;AExEA,AFyEA;AEzEA,AF0EA;AE1EA,AF2EA,mBE1E2B,+BAAiBA,WAAjB,CAD3B;AF4EA;AE5EA,AF6EA;AE5EOY,AF6EP,YE7EOA,WADP;AAAA,AF+EA;AE/EA,AFgFA,mBE9E4BmC,aAF5B;AFiFA;AEjFA,AFkFA;AEhFOY,AFiFP,YEjFOA,YAFP;AAGC7D,AFiFD,2BEjFO8D,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACA,AFiFD,oCEjFWjD,WAAV,EAAuB+C,YAAvB;AFkFD;AEtFA,AFuFA;AEvFA,AFwFA;AExFA,AFyFA;AEzFA,AF0FA;AE1FA,AF2FA;AE3FA,AF4FA;AE5FA,AF6FA;AACA;AACA;AACA;AEzFA,AF0FA,SE1FSR,aAAT,CAAuBD,IAAvB,EAA6B;AAC5BA,AF0FD,EE1FCA,IAAI,CAACY,OAAL,CAAa,UAACZ,IAAD,EAAU;AACtB,AF0FF,QE1FQa,WAAW,GAAGnE,QAAQ,CAACoE,aAAT,CAAuB,KAAvB,CAApB;AACAD,AF0FF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":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const modalContainer = document.querySelector(\".modal__container\");\r\nexport const modal = document.querySelector(\".modal\");\r\n\r\nexport async function getDetailedFetch(countryCode) {\r\n\ttry {\r\n\t\tconst detailedFetch = await fetch(\r\n\t\t\t`https://restcountries.eu/rest/v2/alpha/${countryCode}?fields=name;nativeName;population;region;subregion;capital;topLevelDomain;currencies;languages;borders;flag`\r\n\t\t);\r\n\t\tconst jsonCountry = await detailedFetch.json();\r\n\r\n\t\treturn jsonCountry;\r\n\t} catch (err) {\r\n\t\talert(err.message);\r\n\t}\r\n}\r\n\r\nexport function commaSeparated(num) {\r\n\treturn num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n}\r\n\r\nexport function openModal(countryData, allCountriesData) {\r\n\tconst {\r\n\t\tname,\r\n\t\tnativeName,\r\n\t\tpopulation,\r\n\t\tregion,\r\n\t\tsubregion,\r\n\t\tcapital,\r\n\t\ttopLevelDomain,\r\n\t\tcurrencies,\r\n\t\tlanguages,\r\n\t\tborders,\r\n\t\tflag,\r\n\t} = countryData;\r\n\r\n\tconst renderBorders = allCountriesData\r\n\t\t.filter((country) => borders.includes(country.alpha3Code))\r\n\t\t.map((border) => {\r\n\t\t\treturn `<button class=\"border-button\" data-code=${border.alpha3Code}>${border.name}</button>`;\r\n\t\t})\r\n\t\t.join(\" \");\r\n\r\n\tmodalContainer.innerHTML = `\r\n\t\r\n\r\n\t<div class=\"modal-imagebox\">\r\n\t<img src=${flag} alt=\"\" class=\"modal__image\">\r\n\t</div>\r\n\t  \r\n\t      <div class=\"modal-data\">\r\n        <div class=\"modal-textleft\">\r\n\r\n            <h2 class=\"modal__country\">${name}</h2>\r\n\r\n            <p class=\"modal__native\">Native Name: <span>${nativeName}</span></p>\r\n            <p class=\"modal__population\">Population:<span> ${commaSeparated(\r\n\t\t\t\t\t\t\tpopulation\r\n\t\t\t\t\t\t)}</span></p>\r\n            <p class=\"modal__region\">Region: <span>${region}</span></p>\r\n            <p class=\"modal__subregion\">Sub Region: <span>${subregion}</span></p>\r\n            <p class=\"modal__capital\">Capital: <span>${capital}</span></p>\r\n        </div>\r\n\r\n        <div class=\"modal-textright\">\r\n            <p class=\"modal__domain\">Top Level Domain:<span> ${topLevelDomain}</span></p>\r\n            <p class=\"modal__currencies\">Currencies: <span>${currencies.map(\r\n\t\t\t\t\t\t\t(currency) => currency.code\r\n\t\t\t\t\t\t)}</span></p>\r\n            <p class=\"modal__languages\">Languages: <span>${languages.map(\r\n\t\t\t\t\t\t\t(language) => language.name\r\n\t\t\t\t\t\t)}</span></p>\r\n\r\n            <div class=\"borders\">Borders:${ borders.length > 0 ? renderBorders : \"This country is lonely AF\"}</div>\r\n        </div>\r\n    </div>\r\n\t\t\t\r\n              \r\n\t\t\t\t\r\n\t`;\r\n\r\n\tmodal.appendChild(modalContainer);\r\n}\r\n","import \"regenerator-runtime/runtime\";\r\nimport {\r\n\tcommaSeparated,\r\n\tgetDetailedFetch,\r\n\topenModal,\r\n\tmodalContainer,\r\n\tmodal,\r\n} from \"./helpers\";\r\n\r\nconst container = document.querySelector(\".container\");\r\nconst input = document.querySelector(\".search-field\");\r\nconst select = document.querySelector(\".drop-list\");\r\nconst title = document.querySelector(\".title\");\r\nconst themeToggler = document.querySelector(\".toggler\");\r\nconst togglerText = document.querySelector(\".toggler__mode\");\r\nconst backButton = document.querySelector(\".back-button\");\r\n\r\nlet searchLetter = \"\";\r\n\r\nconst countriesData = fetch(\r\n\t\"https://restcountries.eu/rest/v2/all?fields=alpha3Code;flag;name;capital;region;population\"\r\n)\r\n\t.then((response) => response.json())\r\n\t.then((data) => data);\r\n\r\n(async () => {\r\n\ttry {\r\n\t\trenderCountry(await countriesData);\r\n\t} catch (e) {\r\n\t\talert(e.message);\r\n\t}\r\n})();\r\n\r\nconst searchFilter = async () => {\r\n\tconst raw = await countriesData;\r\n\r\n\tconst filtered = raw.filter((data) =>\r\n\t\tdata.name.toLowerCase().includes(searchLetter.toLowerCase())\r\n\t);\r\n\r\n\trenderCountry(filtered);\r\n};\r\n\r\nconst selectRegion = async (region) => {\r\n\tconst selectRegion = await countriesData;\r\n\tconst shit = selectRegion.filter((data) => data.region === region);\r\n\tcontainer.innerHTML = \"\";\r\n\trenderCountry(shit);\r\n};\r\n\r\nasync function handleCountryClick(countryCode) {\r\n\tconst countryData = await getDetailedFetch(countryCode);\r\n\tconst allCountries = await countriesData;\r\n\tmodal.style.display = \"flex\";\r\n\topenModal(countryData, allCountries);\r\n}\r\n\r\nfunction renderCountry(data) {\r\n\tdata.forEach((data) => {\r\n\t\tconst countryCard = document.createElement(\"div\");\r\n\t\tcountryCard.classList.add(\"container__card\");\r\n\r\n\t\tcountryCard.innerHTML = `\r\n\t\t<div class=\"country-card\" data-code=${data.alpha3Code}>\r\n\t\t<div class=\"country-card__wrapper\">\r\n\t\t<img src=${data.flag} alt=\"flag\" class=\"country-card__flag\">\r\n\t\t</div>\r\n\t\t \r\n\t\t\t\r\n            <div class=\"country-card__info\">\r\n                <h3 class=\"name\">${data.name}</h3>\r\n                <p class=\"population\">Population:<span>${commaSeparated(\r\n\t\t\t\t\t\t\t\t\tdata.population\r\n\t\t\t\t\t\t\t\t)}</span></p>\r\n                <p class=\"region\">Region:<span>${data.region}</span></p>\r\n                <p class=\"capital\">Capital:<span>${data.capital}</span></p>\r\n\t\t</div>\r\n\t\t`;\r\n\r\n\t\tcontainer.appendChild(countryCard);\r\n\t});\r\n}\r\n\r\nthemeToggler.addEventListener(\"click\", () => {\r\n\tdocument.body.classList.toggle(\"light\");\r\n\tdocument.body.classList.contains(\"light\")\r\n\t\t? (togglerText.textContent = \"Dark Mode\")\r\n\t\t: (togglerText.textContent = \"Light Mode\");\r\n});\r\n\r\ndocument.addEventListener(\"click\", (e) => {\r\n\tif (e.target.className === \"country-card__flag\") {\r\n\t\tconst testshit = e.target.parentElement.parentElement.dataset.code;\r\n\r\n\t\thandleCountryClick(testshit);\r\n\t}\r\n});\r\n\r\nmodalContainer.addEventListener(\"click\", (e) => {\r\n\tconst countryCode = e.target.dataset.code;\r\n\tif (e.target.classList.contains(\"border-button\")) {\r\n\t\thandleCountryClick(countryCode);\r\n\t}\r\n});\r\n\r\ntitle.addEventListener(\"click\", () => {\r\n\tdocument.location.href = \"/\";\r\n});\r\n\r\nselect.addEventListener(\"change\", (e) => {\r\n\tinput.value = \"\";\r\n\tconst region = e.target.value;\r\n\r\n\tselectRegion(region);\r\n});\r\n\r\ninput.addEventListener(\"input\", (e) => {\r\n\tselect.value = \"\";\r\n\r\n\tsearchLetter = e.target.value;\r\n\tconst validate = /^[a-zA-Z]+$/;\r\n\tif (e.target.value.match(validate)) {\r\n\t\tcontainer.innerHTML = \"\";\r\n\t\tsearchFilter();\r\n\t}\r\n});\r\n\r\nbackButton.addEventListener(\"click\", (e) => {\r\n\tmodal.style.display = \"none\";\r\n});\r\n"]}